using System; using System.IO;
using UnityEngine; using UnityEditor;
using UnityEditor.PackageManager.Requests;
using UnityEditor.PackageManager;

namespace Activ.Packaging{
public class FreezeAction{

    ListRequest Request;
    public bool offline = true;
    bool verbose;
    const string path = "Packages/requirements.txt";

    public void Apply(bool verbose){
        this.verbose = verbose;
        Request = Client.List(offline);
        EditorApplication.update += Progress;
    }

    void Progress(){
        if(!Request.IsCompleted) return;
        if(Request.Status == StatusCode.Success){
            WriteRequirements(Request.Result);
            if(verbose) Debug.Log($"Requirements saved under {path}");
        }else if(Request.Status >= StatusCode.Failure)
            Debug.Log(Request.Error.message);
        EditorApplication.update -= Progress;
    }

    void WriteRequirements(PackageCollection packages){
        using (var writer = new StreamWriter(path)){
            writer.WriteLine(
@"#
# This file is autogenerated by PuP
# To update, run Activ > PuP > Freeze requirements
#");
            foreach (var package in packages){
                writer.WriteLine($"{package.name}=={package.version}");
            }
        }
    }

}}
